# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*
terraform.tfvars
.terraform.lock.hcl
infra/*.tfstate
infra/*.tfstate.*
infra/.terraform.lock.hcl

# Crash log files
crash.log
crash.*.log
infra/crash.log
infra/crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars.json
terraform.tfvars
*.auto.tfvars
infra/*.tfvars
infra/*.tfvars.json
infra/*.auto.tfvars

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json
infra/override.tf
infra/override.tf.json
infra/*_override.tf
infra/*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc
infra/.terraformrc
infra/terraform.rc

# Ignore Python Byte-compiled / optimized / env / DLL files
__pycache__/
*.py[cod]
*$py.class
.env
_pycache_/
.mypy_cache
apps/sfatc/__pycache__/
apps/sfelc/__pycache__/
